/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/failed-tasks/org-domains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Orgs Without Completed Tasks */
        get: operations["get_orgs_without_completed_tasks_api_v1_failed_tasks_org_domains_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/reports/client-monthly/run-all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Kick Off All Org Client Monthly Report Generation */
        post: operations["kick_off_all_org_client_monthly_report_generation_api_v1_reports_client_monthly_run_all_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/reports/{report_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Report */
        get: operations["get_report_api_v1_reports__report_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/articles/spelling-errors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Articles With Spelling Errors */
        get: operations["get_articles_with_spelling_errors_api_v1_articles_spelling_errors_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/articles/{org_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Articles For Org */
        get: operations["get_articles_for_org_api_v1_articles__org_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/articles/{org_id}/page-analysis": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Page Analysis For Org */
        get: operations["page_analysis_for_org_api_v1_articles__org_id__page_analysis_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/articles/{org_id}/kick-off": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Kick Off For Org */
        get: operations["kick_off_for_org_api_v1_articles__org_id__kick_off_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/articles/kick-off": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Kick Off */
        get: operations["kick_off_api_v1_articles_kick_off_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/articles/domain/{domain}/last-30-days": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Check Articles For Domain */
        get: operations["check_articles_for_domain_api_v1_articles_domain__domain__last_30_days_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/grid-schedules-html": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Grid Schedules */
        get: operations["list_grid_schedules_api_v1_grid_schedules_html_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/grid-schedule": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Post Grid Schedule
         * @description Asynchronously post geographical grid points around a given center based on specified parameters.
         */
        post: operations["post_grid_schedule_api_v1_grid_schedule_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/grid-schedules/run": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Kick Off All Grid Schedules */
        get: operations["kick_off_all_grid_schedules_api_v1_grid_schedules_run_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/grid-schedule/{grid_schedule_id}/run": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Process Grid Schedule Batch Handler */
        get: operations["process_grid_schedule_batch_handler_api_v1_grid_schedule__grid_schedule_id__run_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/grid-schedule/org/{org_id}/run": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Generate Grid Schedules For Org */
        get: operations["generate_grid_schedules_for_org_api_v1_grid_schedule_org__org_id__run_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/competitor-grid-ranks/{grid_ranks_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Competitor Ranks */
        get: operations["get_competitor_ranks_api_v1_competitor_grid_ranks__grid_ranks_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/tasks/dashboard": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Task Dashboard
         * @description Get a dashboard of all available tasks and their current status
         */
        get: operations["get_task_dashboard_api_v1_tasks_dashboard_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/tasks/task": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Task
         * @description Create a new background task.
         *
         *     Parameters
         *     ----------
         *     task_payload
         *
         *     Returns
         *     -------
         *     dict[str, str]
         *         A dictionary containing the ID of the created task.
         */
        post: operations["create_task_api_v1_tasks_task_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Users */
        get: operations["get_users_api_v1_users_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Current User */
        get: operations["get_current_user_api_v1_users_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/locations/{location_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Location */
        get: operations["get_location_api_v1_locations__location_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/locations/{location_id}/grids": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Recent Grids For Location */
        get: operations["get_recent_grids_for_location_api_v1_locations__location_id__grids_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/orgs/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Org
         * @description Create and possibly join an org.
         */
        post: operations["create_org_api_v1_orgs__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/orgs/{org_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Org */
        get: operations["get_org_api_v1_orgs__org_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/orgs/{org_id}/lead-forms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Lead Forms */
        get: operations["get_lead_forms_api_v1_orgs__org_id__lead_forms_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/orgs/{org_id}/lead-forms-chart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Lead Forms Chart */
        get: operations["get_lead_forms_chart_api_v1_orgs__org_id__lead_forms_chart_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/orgs/{org_id}/paginated-lead-forms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Paginated Lead Forms */
        get: operations["get_paginated_lead_forms_api_v1_orgs__org_id__paginated_lead_forms_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/orgs/{org_id}/locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Locations */
        get: operations["get_locations_api_v1_orgs__org_id__locations_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/orgs/{org_id}/backlinks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Org Backlinks */
        get: operations["get_org_backlinks_api_v1_orgs__org_id__backlinks_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/insights/{domain}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Organization Insights */
        get: operations["get_organization_insights_api_v1_admin_insights__domain__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/generate-user-accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Generate User Accounts
         * @description Generate user accounts for all points of contact
         */
        get: operations["generate_user_accounts_api_v1_admin_generate_user_accounts_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Admin Stats Handler */
        get: operations["get_admin_stats_handler_api_v1_admin_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/orgs/bulk-load": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Bulk Load */
        post: operations["bulk_load_api_v1_admin_orgs_bulk_load_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/job-listings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Job Listings */
        get: operations["job_listings_api_v1_admin_job_listings_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/purge-org-data/{domain}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Purge Org Data Handler */
        get: operations["purge_org_data_handler_api_v1_admin_purge_org_data__domain__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/tweak-locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Tweak Locations Handler */
        get: operations["tweak_locations_handler_api_v1_admin_tweak_locations_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/job-search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Job Search Handler */
        get: operations["job_search_handler_api_v1_admin_job_search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/locations/without-gmb": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Locations Without Gmb
         * @description Get all active locations with active orgs that don't have an associated GMB listing.
         */
        get: operations["get_locations_without_gmb_api_v1_admin_locations_without_gmb_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/locations/bad-reviews": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Locations With Bad Reviews
         * @description Get all active locations with active orgs that have GMB listings with low average reviews.
         */
        get: operations["get_locations_with_bad_reviews_api_v1_admin_locations_bad_reviews_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/locations/incomplete-gmb": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Locations With Incomplete Gmb
         * @description Get all active locations with active orgs that have GMB listings with missing essential information.
         */
        get: operations["get_locations_with_incomplete_gmb_api_v1_admin_locations_incomplete_gmb_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/locations/without-reviews": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Locations Without Reviews
         * @description Get all locations with active orgs that have GMB listings but no reviews.
         */
        get: operations["get_locations_without_reviews_api_v1_admin_locations_without_reviews_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/admin/system-overview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get System Overview
         * @description Get comprehensive system overview of GMB coverage and health for active orgs.
         */
        get: operations["get_system_overview_api_v1_admin_system_overview_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/audit/available-industries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Available Industries */
        get: operations["get_available_industries_api_v1_audit_available_industries_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/audit/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Audits */
        get: operations["list_audits_api_v1_audit_list_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/audit/{report_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Audit */
        get: operations["get_audit_api_v1_audit__report_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/audit/{domain}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate Audit V2 */
        post: operations["generate_audit_v2_api_v1_audit__domain__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/audit/{domain}/keywords-and-locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Audit Keywords And Locations */
        get: operations["get_audit_keywords_and_locations_api_v1_audit__domain__keywords_and_locations_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/reviews/schedule/run": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Generate Reviews Schedules */
        get: operations["generate_reviews_schedules_api_v1_reviews_schedule_run_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/reviews/schedule/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Review Schedule Or Org */
        post: operations["create_review_schedule_or_org_api_v1_reviews_schedule_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/reviews/{location_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Reviews */
        get: operations["get_reviews_api_v1_reviews__location_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/backlinks/schedule/run": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate Backlinks Schedules */
        post: operations["generate_backlinks_schedules_api_v1_backlinks_schedule_run_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/backlinks/schedule/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Backlink Schedule Or Org */
        post: operations["create_backlink_schedule_or_org_api_v1_backlinks_schedule_create_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/backlinks/schedule/{org_id}/run": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Generate Backlinks Schedule For Org */
        get: operations["generate_backlinks_schedule_for_org_api_v1_backlinks_schedule__org_id__run_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/backlinks/{org_id}/backlinks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Backlinks */
        get: operations["get_backlinks_api_v1_backlinks__org_id__backlinks_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/backlinks/{org_id}/domain-pages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Domain Pages */
        get: operations["get_domain_pages_api_v1_backlinks__org_id__domain_pages_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/backlinks/{org_id}/referring-domains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Referring Domains */
        get: operations["get_referring_domains_api_v1_backlinks__org_id__referring_domains_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/backlinks/{org_id}/backlinks-summary-timeseries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Backlinks Timeseries Summary */
        get: operations["get_backlinks_timeseries_summary_api_v1_backlinks__org_id__backlinks_summary_timeseries_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/backlinks/{org_id}/backlinks-aggregated-summary-timeseries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Backlinks Aggregated Timeseries Summary */
        get: operations["get_backlinks_aggregated_timeseries_summary_api_v1_backlinks__org_id__backlinks_aggregated_summary_timeseries_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Websites */
        get: operations["list_websites_api_v1_content_gen_website_get"];
        put?: never;
        /** Create Website */
        post: operations["create_website_api_v1_content_gen_website_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/constants": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Website Constants
         * @description Present constants needed for website configuration.
         *
         *     `banner_templates` map friendly template labels to bannerbear template IDs used in the website palette resource.
         *
         *     `article_fields_schema` is the OpenAPI JSON schema of the "article_fields" property of the website resource.
         */
        get: operations["get_website_constants_api_v1_content_gen_website_constants_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Website */
        get: operations["get_website_api_v1_content_gen_website__website_id__get"];
        /** Update Website */
        put: operations["update_website_api_v1_content_gen_website__website_id__put"];
        post?: never;
        /** Delete Website */
        delete: operations["delete_website_api_v1_content_gen_website__website_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/webflow-integration": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Website Webflow Integration */
        get: operations["get_website_webflow_integration_api_v1_content_gen_website__website_id__webflow_integration_get"];
        put?: never;
        /** Set Website Webflow Integration */
        post: operations["set_website_webflow_integration_api_v1_content_gen_website__website_id__webflow_integration_post"];
        /** Delete Website Webflow Integration */
        delete: operations["delete_website_webflow_integration_api_v1_content_gen_website__website_id__webflow_integration_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/webflow-fields": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Determine Webflow Fields
         * @description Determine likely correct article fields configuration based on website schema.
         */
        get: operations["determine_webflow_fields_api_v1_content_gen_website__website_id__webflow_fields_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/article": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Articles
         * @description List articles, most recently changed first.
         *
         *     `date_from` and `date_to` refer to complete business days in US/Eastern, e.g. choosing date_from=2025-01-01 and
         *     date_to=2025-01-01 selects the range ``[Jan 1st 2025 00:00, Jan 2nd 2025 00:00)`` (left inclusive, right
         *     exclusive), meaning the Jan 1st 2025 full calendar day in the timezone native to the business.
         */
        get: operations["list_articles_api_v1_content_gen_website__website_id__article_get"];
        put?: never;
        /** Create Article */
        post: operations["create_article_api_v1_content_gen_website__website_id__article_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/article-upload-test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Article Upload Test */
        post: operations["article_upload_test_api_v1_content_gen_website__website_id__article_upload_test_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/article/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Articles */
        post: operations["create_articles_api_v1_content_gen_website__website_id__article_bulk_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/article/{article_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Article */
        get: operations["get_article_api_v1_content_gen_website__website_id__article__article_id__get"];
        /** Update Article */
        put: operations["update_article_api_v1_content_gen_website__website_id__article__article_id__put"];
        post?: never;
        /** Delete Article */
        delete: operations["delete_article_api_v1_content_gen_website__website_id__article__article_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/article/{article_id}/text": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Article Text */
        get: operations["get_article_text_api_v1_content_gen_website__website_id__article__article_id__text_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/article/{article_id}/html": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Article Html */
        get: operations["get_article_html_api_v1_content_gen_website__website_id__article__article_id__html_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/palette": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Website Palette */
        get: operations["get_website_palette_api_v1_content_gen_website__website_id__palette_get"];
        put?: never;
        /** Set Website Palette */
        post: operations["set_website_palette_api_v1_content_gen_website__website_id__palette_post"];
        /** Delete Website Palette */
        delete: operations["delete_website_palette_api_v1_content_gen_website__website_id__palette_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/logo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Website Logo */
        get: operations["get_website_logo_api_v1_content_gen_website__website_id__logo_get"];
        put?: never;
        /** Set Website Logo */
        post: operations["set_website_logo_api_v1_content_gen_website__website_id__logo_post"];
        /** Delete Website Logo */
        delete: operations["delete_website_logo_api_v1_content_gen_website__website_id__logo_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/website/{website_id}/banner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate Website Banner
         * @description Generate a banner based on website settings.
         */
        post: operations["generate_website_banner_api_v1_content_gen_website__website_id__banner_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/content-gen/report": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Report */
        get: operations["report_api_v1_content_gen_report_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/org-memberships": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Org Membership */
        post: operations["create_org_membership_api_v1_org_memberships_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/org-memberships/{membership_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Org Membership */
        get: operations["get_org_membership_api_v1_org_memberships__membership_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/extract": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Extract Data
         * @description Primary endpoint:
         *       1) Determine if we have a known goal (e.g. 'find_locations').
         *       2) If so, delegate to that goal handler. Otherwise, fallback to dynamic extraction.
         *       3) Respect 'smart_scrape' for concurrency-based additional pages.
         */
        post: operations["extract_data_api_v1_extract_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/mcp/current-credits": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Current Credits */
        get: operations["get_current_credits_api_v1_mcp_current_credits_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/mcp/find-locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Find Locations */
        post: operations["find_locations_api_v1_mcp_find_locations_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/mcp/find-locations/cost": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Find Locations Cost */
        post: operations["find_locations_cost_api_v1_mcp_find_locations_cost_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/mcp/audit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Audits For Domain */
        get: operations["list_audits_for_domain_api_v1_mcp_audit_get"];
        put?: never;
        /** Start Audit For Domain */
        post: operations["start_audit_for_domain_api_v1_mcp_audit_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/mcp/audit/cost": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get Audit For Domain Cost */
        post: operations["get_audit_for_domain_cost_api_v1_mcp_audit_cost_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/mcp/get-domain-industry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get Domain Industry */
        post: operations["get_domain_industry_api_v1_mcp_get_domain_industry_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/mcp/get-domain-industry/cost": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get Domain Industry Cost */
        post: operations["get_domain_industry_cost_api_v1_mcp_get_domain_industry_cost_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/mcp/search-volume-of-keywords": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Search Volume Of Keywords */
        post: operations["search_volume_of_keywords_api_v1_mcp_search_volume_of_keywords_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/mcp/search-volume-of-keywords/cost": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Search Volume Of Keywords Cost */
        post: operations["search_volume_of_keywords_cost_api_v1_mcp_search_volume_of_keywords_cost_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/locai/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create User
         * @description Create a new user, with a new API key, a Loc-ai org, and free credits.
         */
        post: operations["create_user_api_v1_locai_user_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/locai/user/{email}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User */
        get: operations["get_user_api_v1_locai_user__email__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/locai/payment/stripe-webhook": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Stripe Webhook
         * @description Create a new user, with a new API key, a Loc-ai org, and free credits.
         */
        post: operations["stripe_webhook_api_v1_locai_payment_stripe_webhook_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/jwt/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Jwt.Login */
        post: operations["auth_jwt_login_auth_jwt_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/jwt/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Jwt.Logout */
        post: operations["auth_jwt_logout_auth_jwt_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register:Register */
        post: operations["register_register_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/forgot-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reset:Forgot Password */
        post: operations["reset_forgot_password_auth_forgot_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reset:Reset Password */
        post: operations["reset_reset_password_auth_reset_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/request-verify-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verify:Request-Token */
        post: operations["verify_request_token_auth_request_verify_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verify:Verify */
        post: operations["verify_verify_auth_verify_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/authenticated-route": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Authenticated Route */
        get: operations["authenticated_route_authenticated_route_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Root */
        get: operations["read_root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** ArticleCreate */
        ArticleCreate: {
            /** Title */
            title: string;
        };
        /** ArticlePage */
        ArticlePage: {
            /** Articles */
            articles: components["schemas"]["ArticleRead"][];
            /** Next Page Token */
            next_page_token: string | null;
        };
        /** ArticleRead */
        ArticleRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Website Id
             * Format: uuid
             */
            website_id: string;
            /** Title */
            title: string;
            status: components["schemas"]["GeneratedArticleStatus"];
            /** Fields */
            fields: {
                [key: string]: string;
            } | null;
            processing_error: components["schemas"]["ProcessingError"] | null;
            /** External Url */
            external_url: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at: string | null;
            /** Published At */
            published_at: string | null;
            /** Status Changed At */
            status_changed_at: string | null;
        };
        /** ArticleReportRow */
        ArticleReportRow: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /** Org Domain */
            org_domain: string;
            /** Org Active */
            org_active: boolean;
            /** Generated Website Id */
            generated_website_id: string | null;
            /** Generated Website Created At */
            generated_website_created_at: string | null;
            /** Generated Website Articles Per Week */
            generated_website_articles_per_week: number | null;
            /** Generated Website Auto Publish */
            generated_website_auto_publish: boolean | null;
            /** Pending */
            pending: number;
            /** Generation Error */
            generation_error: number;
            /** Generated */
            generated: number;
            /** Upload Failed */
            upload_failed: number;
            /** Uploaded */
            uploaded: number;
            /** Publishing Failed */
            publishing_failed: number;
            /** Published */
            published: number;
            /** Last Published At */
            last_published_at: string | null;
            /** Target To Date */
            target_to_date: number | null;
        };
        /** ArticleTextField */
        ArticleTextField: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            kind: "article-text";
        };
        /** AuditKeywordsAndLocations */
        AuditKeywordsAndLocations: {
            /** Locations */
            locations?: string[] | null;
            /** Keywords */
            keywords?: string[] | null;
            level?: components["schemas"]["Level"] | null;
            /** @default medium */
            grid_density: components["schemas"]["GridDensity"];
        };
        /** AuditKeywordsAndLocationsRequired */
        AuditKeywordsAndLocationsRequired: {
            /** Locations */
            locations?: string[];
            /** Keywords */
            keywords?: string[];
            /** @default dma */
            level: components["schemas"]["Level"];
            grid_density?: components["schemas"]["GridDensity"] | null;
        };
        /** AuditListing */
        AuditListing: {
            /** Orgs */
            orgs: components["schemas"]["OrgSummary"][];
        };
        /** AuditListingItem */
        AuditListingItem: {
            /**
             * Report Id
             * Format: uuid
             */
            report_id: string;
            /** Client Token */
            client_token: string;
            /** Domain */
            domain: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** AuditReport */
        AuditReport: {
            header: components["schemas"]["ReportHeader"];
            /** Org Domain */
            org_domain: string;
            /** Org Data */
            org_data: components["schemas"]["LocationData"][];
            level: components["schemas"]["Level"];
            global_current_estimates: components["schemas"]["Estimates"];
            global_potential_estimates: components["schemas"]["Estimates"];
            /** Total Keywords */
            total_keywords: number;
            /**
             * Report Type
             * @default audit
             * @constant
             * @enum {string}
             */
            report_type: "audit";
        };
        /** AuditsListing */
        AuditsListing: {
            /** Items */
            items: components["schemas"]["AuditListingItem"][];
        };
        /** BacklinkRead */
        BacklinkRead: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /** Url To */
            url_to: string;
            /** Domain From */
            domain_from?: string | null;
            /** Url From */
            url_from?: string | null;
            /** Url From Https */
            url_from_https?: boolean | null;
            /** Domain To */
            domain_to?: string | null;
            /** Url To Https */
            url_to_https?: boolean | null;
            /** Tld From */
            tld_from?: string | null;
            /** Is New */
            is_new?: boolean | null;
            /** Is Lost */
            is_lost?: boolean | null;
            /** Backlink Spam Score */
            backlink_spam_score?: number | null;
            /** Rank */
            rank?: number | null;
            /** Page From Rank */
            page_from_rank?: number | null;
            /** Domain From Rank */
            domain_from_rank?: number | null;
            /** Domain From Is Ip */
            domain_from_is_ip?: boolean | null;
            /** Domain From Ip */
            domain_from_ip?: string | null;
            /** Domain From Country */
            domain_from_country?: string | null;
            /** Page From External Links */
            page_from_external_links?: number | null;
            /** Page From Internal Links */
            page_from_internal_links?: number | null;
            /** Page From Size */
            page_from_size?: number | null;
            /** Page From Encoding */
            page_from_encoding?: string | null;
            /** Page From Language */
            page_from_language?: string | null;
            /** Page From Title */
            page_from_title?: string | null;
            /** Page From Status Code */
            page_from_status_code?: number | null;
            /** First Seen */
            first_seen?: string | null;
            /** Prev Seen */
            prev_seen?: string | null;
            /** Last Seen */
            last_seen?: string | null;
            /** Item Type */
            item_type?: string | null;
            /** Dofollow */
            dofollow?: boolean | null;
            /** Original */
            original?: boolean | null;
            /** Alt */
            alt?: string | null;
            /** Image Url */
            image_url?: string | null;
            /** Anchor */
            anchor?: string | null;
            /** Text Pre */
            text_pre?: string | null;
            /** Text Post */
            text_post?: string | null;
            /** Semantic Location */
            semantic_location?: string | null;
            /** Links Count */
            links_count?: number | null;
            /** Group Count */
            group_count?: number | null;
            /** Is Broken */
            is_broken?: boolean | null;
            /** Url To Status Code */
            url_to_status_code?: number | null;
            /** Url To Spam Score */
            url_to_spam_score?: number | null;
            /** Url To Redirect Target */
            url_to_redirect_target?: string | null;
            /** Is Indirect Link */
            is_indirect_link?: boolean | null;
        };
        /** BacklinksAggregatedSummary */
        BacklinksAggregatedSummary: {
            /** Rank */
            rank: number | null;
            /** Backlinks */
            backlinks: number | null;
            /** Backlinks Nofollow */
            backlinks_nofollow: number | null;
            /** Referring Pages */
            referring_pages: number | null;
            /** Referring Pages Nofollow */
            referring_pages_nofollow: number | null;
            /** Referring Domains */
            referring_domains: number | null;
            /** Referring Domains Nofollow */
            referring_domains_nofollow: number | null;
            /** Referring Main Domains */
            referring_main_domains: number | null;
            /** Referring Main Domains Nofollow */
            referring_main_domains_nofollow: number | null;
            /** Referring Ips */
            referring_ips: number | null;
            /** Referring Subnets */
            referring_subnets: number | null;
            /** New Backlinks */
            new_backlinks: number | null;
            /** Lost Backlinks */
            lost_backlinks: number | null;
            /** New Referring Domains */
            new_referring_domains: number | null;
            /** Lost Referring Domains */
            lost_referring_domains: number | null;
            /** New Referring Main Domains */
            new_referring_main_domains: number | null;
            /** Lost Referring Main Domains */
            lost_referring_main_domains: number | null;
        };
        /** BacklinksAggregatedSummaryRead */
        BacklinksAggregatedSummaryRead: {
            summary: components["schemas"]["BacklinksAggregatedSummary"];
            /** New Lost By Date */
            new_lost_by_date: components["schemas"]["NewLostBacklinksbyDay"][];
        };
        /** BacklinksDomainPageRead */
        BacklinksDomainPageRead: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /** Page */
            page: string;
            /** Prev Visited */
            prev_visited?: string | null;
            /** Backlinks */
            backlinks?: number | null;
        };
        /** BacklinksReferringDomainRead */
        BacklinksReferringDomainRead: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /** Domain */
            domain: string;
            /** Rank */
            rank?: number | null;
            /** Backlinks */
            backlinks?: number | null;
            /** First Seen */
            first_seen?: string | null;
            /** Lost Date */
            lost_date?: string | null;
            /** Backlinks Spam Score */
            backlinks_spam_score?: number | null;
            /** Broken Backlinks */
            broken_backlinks?: number | null;
            /** Broken Pages */
            broken_pages?: number | null;
            /** Referring Domains */
            referring_domains?: number | null;
            /** Referring Domains Nofollow */
            referring_domains_nofollow?: number | null;
            /** Referring Main Domains */
            referring_main_domains?: number | null;
            /** Referring Main Domains Nofollow */
            referring_main_domains_nofollow?: number | null;
            /** Referring Ips */
            referring_ips?: number | null;
            /** Referring Subnets */
            referring_subnets?: number | null;
            /** Referring Pages */
            referring_pages?: number | null;
            /** Referring Pages Nofollow */
            referring_pages_nofollow?: number | null;
            /** Referring Links Tld */
            referring_links_tld?: Record<string, never> | null;
            /** Referring Links Types */
            referring_links_types?: Record<string, never> | null;
            /** Referring Links Attributes */
            referring_links_attributes?: Record<string, never> | null;
            /** Referring Links Platform Types */
            referring_links_platform_types?: Record<string, never> | null;
            /** Referring Links Semantic Locations */
            referring_links_semantic_locations?: Record<string, never> | null;
            /** Referring Links Countries */
            referring_links_countries?: Record<string, never> | null;
        };
        /** BacklinksScheduleCreate */
        BacklinksScheduleCreate: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /** Interval */
            interval: number;
            /**
             * Active
             * @default true
             */
            active: boolean;
        };
        /** BacklinksScheduleRead */
        BacklinksScheduleRead: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /**
             * Run Interval
             * Format: duration
             */
            run_interval: string;
            /** Schedule Active */
            schedule_active: boolean;
            /**
             * Created
             * Format: date-time
             */
            created: string;
        };
        /** BacklinksTimeseriesSummaryRead */
        BacklinksTimeseriesSummaryRead: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /**
             * Summary Date
             * Format: date
             */
            summary_date: string;
            /** Rank */
            rank?: number | null;
            /** Backlinks */
            backlinks?: number | null;
            /** Backlinks Nofollow */
            backlinks_nofollow?: number | null;
            /** Referring Pages */
            referring_pages?: number | null;
            /** Referring Pages Nofollow */
            referring_pages_nofollow?: number | null;
            /** Referring Domains */
            referring_domains?: number | null;
            /** Referring Domains Nofollow */
            referring_domains_nofollow?: number | null;
            /** Referring Main Domains */
            referring_main_domains?: number | null;
            /** Referring Main Domains Nofollow */
            referring_main_domains_nofollow?: number | null;
            /** Referring Ips */
            referring_ips?: number | null;
            /** Referring Subnets */
            referring_subnets?: number | null;
            /** New Backlinks */
            new_backlinks?: number | null;
            /** Lost Backlinks */
            lost_backlinks?: number | null;
            /** New Referring Domains */
            new_referring_domains?: number | null;
            /** Lost Referring Domains */
            lost_referring_domains?: number | null;
            /** New Referring Main Domains */
            new_referring_main_domains?: number | null;
            /** Lost Referring Main Domains */
            lost_referring_main_domains?: number | null;
        };
        /** BearerResponse */
        BearerResponse: {
            /** Access Token */
            access_token: string;
            /** Token Type */
            token_type: string;
        };
        /** Body_auth_jwt_login_auth_jwt_login_post */
        Body_auth_jwt_login_auth_jwt_login_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** Body_reset_forgot_password_auth_forgot_password_post */
        Body_reset_forgot_password_auth_forgot_password_post: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** Body_reset_reset_password_auth_reset_password_post */
        Body_reset_reset_password_auth_reset_password_post: {
            /** Token */
            token: string;
            /** Password */
            password: string;
        };
        /** Body_set_website_logo_api_v1_content_gen_website__website_id__logo_post */
        Body_set_website_logo_api_v1_content_gen_website__website_id__logo_post: {
            /**
             * Logo
             * Format: binary
             */
            logo: string;
        };
        /** Body_verify_request_token_auth_request_verify_token_post */
        Body_verify_request_token_auth_request_verify_token_post: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** Body_verify_verify_auth_verify_post */
        Body_verify_verify_auth_verify_post: {
            /** Token */
            token: string;
        };
        /** CompetitionSummary */
        CompetitionSummary: {
            /**
             * Competitor Id
             * @description None if this is the customer
             */
            competitor_id: string | null;
            /**
             * Grid Ranks Id
             * @description None if this is the customer
             */
            grid_ranks_id?: string | null;
            /** Name */
            name: string;
            /**
             * Address
             * @default Address Unavailable
             */
            address: string;
            /** Website */
            website: string | null;
            /** Gmb Rank */
            gmb_rank: number;
            /** Gmb Leads */
            gmb_leads: number;
            /** Organic Rank */
            organic_rank: number;
            /** Organic Leads */
            organic_leads: number;
        };
        /** CompetitorRanks */
        CompetitorRanks: {
            /**
             * Rank Id
             * Format: uuid
             */
            rank_id: string;
            /** Previous Rank Id */
            previous_rank_id: string | null;
            /**
             * Competitor Id
             * Format: uuid
             */
            competitor_id: string;
            /**
             * Schedule Id
             * Format: uuid
             */
            schedule_id: string;
            /** Ranks */
            ranks: number[];
            /** Ranks Diff */
            ranks_diff?: number[] | null;
        };
        /** ConstantField */
        ConstantField: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            kind: "constant";
            /** Value */
            value: string;
        };
        /** CreditCost */
        CreditCost: {
            /** Description */
            description?: string | null;
            /** Credit Cost */
            credit_cost: number;
        };
        /** CustomerVsCompetition */
        CustomerVsCompetition: {
            /** Gmb Rank */
            gmb_rank: string;
            /** Gmb Leads */
            gmb_leads: string;
            /** Organic Rank */
            organic_rank: string;
            /** Organic Leads */
            organic_leads: string;
        };
        /** CustomerVsCompetitionSummary */
        CustomerVsCompetitionSummary: {
            /** Gmb Rank */
            gmb_rank: string;
            /** Leads */
            leads: string;
        };
        /**
         * DatePosted
         * @enum {string}
         */
        DatePosted: "today" | "3days" | "week" | "month";
        /** DomainAuditRequest */
        DomainAuditRequest: {
            /** Domain */
            domain: string;
            industry?: components["schemas"]["IndustryName"] | null;
            /** Keywords */
            keywords?: string[] | null;
            /** Locations */
            locations?: string[] | null;
            /**
             * In Worker
             * @default true
             */
            in_worker: boolean;
        };
        /** DomainAuditResponse */
        DomainAuditResponse: {
            /**
             * Report Id
             * Format: uuid
             */
            report_id: string;
            /** Client Token */
            client_token: string;
            /** Frontend Url */
            frontend_url: string;
            /** Backend Url */
            backend_url: string;
        };
        /** EnhancedUserRead */
        EnhancedUserRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /**
             * Is Superuser
             * @default false
             */
            is_superuser: boolean;
            /**
             * Is Verified
             * @default false
             */
            is_verified: boolean;
            /** Name */
            name: string;
            /** Orgs */
            orgs: components["schemas"]["OrgRead"][];
            /** Password Reset Required */
            password_reset_required: boolean;
        };
        /** ErrorModel */
        ErrorModel: {
            /** Detail */
            detail: string | {
                [key: string]: string;
            };
        };
        /** ErrorResponse */
        ErrorResponse: {
            /** Detail */
            detail: unknown;
        };
        /** Estimates */
        Estimates: {
            /** Gmb Engagement */
            gmb_engagement: number;
            /** Gmb Leads */
            gmb_leads: number;
            /** Organic Traffic */
            organic_traffic: number;
            /** Organic Leads */
            organic_leads: number;
        };
        /** ExtractRequest */
        ExtractRequest: {
            /** Url */
            url: string;
            /** Prompt */
            prompt: string;
            /**
             * Smart Scrape
             * @default false
             */
            smart_scrape: boolean;
        };
        /** FeaturedImageField */
        FeaturedImageField: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            kind: "featured-image";
            /**
             * Size
             * @enum {string}
             */
            size: "regular" | "half" | "small";
        };
        /**
         * GeneratedArticleStatus
         * @enum {string}
         */
        GeneratedArticleStatus: "pending" | "generated" | "uploaded" | "published";
        /** GeoTarget */
        GeoTarget: {
            /** Location Code */
            location_code: number;
            /** Location Name */
            location_name: string;
            /** Location Type */
            location_type: string;
        };
        /** GeoTargetSearchVolumes */
        GeoTargetSearchVolumes: {
            /** Given Address */
            given_address: string;
            geo_target: components["schemas"]["GeoTarget"];
            /** Keywords */
            keywords: {
                [key: string]: number;
            };
        };
        /** GmbSchema */
        GmbSchema: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Cid */
            cid: string | null;
            /** Place Id */
            place_id: string | null;
            /** Reviews */
            reviews: components["schemas"]["app__schemas__location__ReviewSchema"][];
            /** Name */
            name: string | null;
            /** Main Image Url */
            main_image_url: string | null;
            /** Category */
            category: string | null;
            /** Phone */
            phone: string | null;
        };
        /**
         * GridDensity
         * @enum {string}
         */
        GridDensity: "low" | "medium" | "high";
        /** GridResponseSchema */
        GridResponseSchema: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Location Id */
            location_id?: string | null;
            /** Company Name */
            company_name: string;
            /** Search Term */
            search_term?: string;
            /** Address */
            address: string;
            /** Ranks */
            ranks: number[];
            /** Ranks Diff */
            ranks_diff?: number[] | null;
            /** Competition Summary */
            competition_summary: components["schemas"]["CompetitionSummary"][];
            customer_vs_competition: components["schemas"]["CustomerVsCompetition"];
            /**
             * Updated
             * Format: date-time
             */
            updated: string;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /** Schedule Id */
            schedule_id?: string | null;
            /** Rank */
            rank?: number | null;
        };
        /** GridSchemaMultipleSearchTerms */
        GridSchemaMultipleSearchTerms: {
            /** @default medium */
            grid_density: components["schemas"]["GridDensity"];
            /**
             * Radius
             * @description Search radius in kilometers
             * @example 15
             */
            radius: number;
            /**
             * Unit
             * @description Unit of distance (km or mi)
             */
            unit: "km" | "mi";
            /**
             * Search Terms
             * @description List of specific search queries
             * @example [
             *       "aba therapy near me"
             *     ]
             */
            search_terms: string[];
            /**
             * Location Id
             * Format: uuid
             * @description location_id
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            location_id: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** IndustriesResponse */
        IndustriesResponse: {
            /** Industries */
            industries: string[];
        };
        /**
         * IndustryName
         * @enum {string}
         */
        IndustryName: "printers-copiers-it" | "aba therapy" | "rehab" | "addiction treatment" | "hcbs" | "gambling addiction treatment" | "home care" | "early intervention" | "assisted living" | "eating disorder and mental health treatment -- custom" | "eating disorder treatment" | "residential treatment" | "knee pain treatment" | "mental health treatment" | "dir floor time therapy" | "vascular treatment" | "daycare center" | "addiction medical hospital" | "personal injury lawyer" | "nursing home" | "hospice" | "garage door services" | "medical equipment" | "cds home care" | "tent party rentals" | "dentists" | "energy supplier" | "telehealth services" | "public_warehousing_3pl" | "home care -- custom nj" | "roofing_services" | "home care -- custom ny" | "behavioral health" | "weight loss pharmacy" | "tent rentals" | "advancedtherapyindustry" | "birthing_center" | "fertility_treatment" | "ddd_home_care" | "aba_speech_occupational_custom" | "peer_support" | "first_responder_treatment_center";
        /** Job */
        Job: {
            /** Id */
            id: string;
        };
        /** LatLon */
        LatLon: {
            /** Lat */
            lat: number;
            /** Lon */
            lon: number;
        };
        /** LeadFormRecord */
        LeadFormRecord: {
            /** Date */
            date: string;
            /** Domain */
            domain: string;
            /** Referrer */
            referrer: string;
            /** Email */
            email?: string | null;
            /** Url */
            url?: string | null;
        };
        /**
         * Level
         * @enum {string}
         */
        Level: "dma" | "state" | "city" | "other";
        /** LocaiUserAvailableCredits */
        LocaiUserAvailableCredits: {
            /** Org Name */
            org_name: string;
            /** Available Free Credits */
            available_free_credits: number;
            /** Available Plan Credits */
            available_plan_credits: number;
            /** Charged Extra Credits */
            charged_extra_credits: number;
        };
        /** LocaiUserCreate */
        LocaiUserCreate: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** LocaiUserRead */
        LocaiUserRead: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Locai Org Name */
            locai_org_name: string;
            /**
             * Locai Org Public Id
             * Format: uuid
             */
            locai_org_public_id: string;
            /** Api Key */
            api_key: string;
        };
        /** LocationData */
        LocationData: {
            /** Address */
            address: string;
            coords: components["schemas"]["LatLon"];
            grid_coords: components["schemas"]["UniformGridPoints"];
            /** Subdivisions */
            subdivisions?: {
                [key: string]: number[][][];
            };
            search_volumes: components["schemas"]["SearchVolumesOfGeoTargets"];
            rankings: components["schemas"]["RankingsResult"];
            review_summary: components["schemas"]["ReviewSummary"];
            review_summary_prev_month: components["schemas"]["ReviewSummary"];
            /**
             * Review Improvement
             * @default -
             */
            review_improvement: string;
            /** Gmb Rank Distribution */
            gmb_rank_distribution?: {
                [key: string]: number;
            };
            level: components["schemas"]["Level"];
            /** Screenshot Url */
            screenshot_url?: string | null;
        };
        /**
         * LocationRequest
         * @description Request model for the location extraction endpoint.
         */
        LocationRequest: {
            /** Domain */
            domain: string;
        };
        /** LocationSchema */
        LocationSchema: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Lat */
            lat: string;
            /** Lon */
            lon: string;
            /** Address */
            address: string;
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            gmb: components["schemas"]["GmbSchema"] | null;
        };
        /** LocationSchemaWithOrg */
        LocationSchemaWithOrg: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Lat */
            lat: string;
            /** Lon */
            lon: string;
            /** Address */
            address: string;
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            org: components["schemas"]["OrgRead"] | null;
            gmb: components["schemas"]["GmbSchema"] | null;
        };
        /** LocationsResponse */
        LocationsResponse: {
            /** Locations */
            locations: components["schemas"]["LocationSchema"][];
        };
        /** LocationsResponseSchema */
        LocationsResponseSchema: {
            /** Locations */
            locations: components["schemas"]["LocationSchema"][];
            stats: components["schemas"]["LocationsStatsSchema"];
        };
        /** LocationsStatsSchema */
        LocationsStatsSchema: {
            /** Total Locations */
            total_locations: number;
            /** Total Reviews */
            total_reviews: number;
            /** Average Rating */
            average_rating: number | null;
            /** Locations With Reviews */
            locations_with_reviews: number;
        };
        /** MonthlyReport */
        MonthlyReport: {
            header: components["schemas"]["ReportHeader"];
            /** Org Domain */
            org_domain: string;
            /** Org Data */
            org_data: components["schemas"]["LocationData"][];
            level: components["schemas"]["Level"];
            global_current_estimates: components["schemas"]["Estimates"];
            global_potential_estimates: components["schemas"]["Estimates"];
            /** Total Keywords */
            total_keywords: number;
            /** Org Id */
            org_id: string;
            /** Org Pocs */
            org_pocs: string[][];
            /** Org Name */
            org_name: string;
            traffic: components["schemas"]["TrafficData"] | null;
            /**
             * Report Type
             * @default monthly
             * @constant
             * @enum {string}
             */
            report_type: "monthly";
        };
        /** NewLostBacklinksbyDay */
        NewLostBacklinksbyDay: {
            /**
             * Summary Date
             * Format: date
             */
            summary_date: string;
            /** New Backlinks */
            new_backlinks: number;
            /** Lost Backlinks */
            lost_backlinks: number;
        };
        /** OrgCreate */
        OrgCreate: {
            /** Name */
            name: string;
            /** Domain */
            domain: string;
        };
        /** OrgMembershipCreate */
        OrgMembershipCreate: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /**
             * User Id
             * Format: uuid
             */
            user_id: string;
            /** Role */
            role: string;
        };
        /** OrgMembershipRead */
        OrgMembershipRead: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /**
             * User Id
             * Format: uuid
             */
            user_id: string;
            /** Role */
            role: string;
        };
        /** OrgRead */
        OrgRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Name */
            name: string;
            /** Domain */
            domain: string;
        };
        /** OrgSummary */
        OrgSummary: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Domain */
            domain: string;
            /** Most Recent Report Timestamp All Time */
            most_recent_report_timestamp_all_time: string | null;
            /** Most Recent Report Timestamp In Range */
            most_recent_report_timestamp_in_range: string | null;
            /** Reports */
            reports: components["schemas"]["ReportSummary"][];
        };
        /** OrganizationInsights */
        OrganizationInsights: {
            /** Status */
            status: string;
            /** Domain */
            domain: string;
            /** Locations On Website */
            locations_on_website: string[];
            enriched_locations: components["schemas"]["LocationsResponse"];
        };
        /** PaginatedLeadForms */
        PaginatedLeadForms: {
            /** Data */
            data: components["schemas"]["LeadFormRecord"][];
            /** Page No */
            page_no: number;
        };
        /** Palette */
        Palette: {
            /** Has Transparency */
            has_transparency: boolean;
            /** Multi Color */
            multi_color: boolean;
            /** Foreground Color */
            foreground_color: string | null;
            /** Background Color */
            background_color: string | null;
            /** Tertiary Color */
            tertiary_color: string | null;
        };
        /** PaletteCreate */
        PaletteCreate: {
            /** Bannerbear Template Id */
            bannerbear_template_id: string;
            website_palette: components["schemas"]["Palette"];
        };
        /** PaletteRead */
        PaletteRead: {
            /**
             * Website Id
             * Format: uuid
             */
            website_id: string;
            /** Bannerbear Template Id */
            bannerbear_template_id: string;
            website_palette: components["schemas"]["Palette"];
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /**
         * ProcessingError
         * @description Short message as text and full message as markdown.
         */
        ProcessingError: {
            /** Short */
            short: string;
            /** Full */
            full: string;
        };
        /** Rankings */
        Rankings: {
            /** Search Term */
            search_term: string;
            /** Gmb Rank */
            gmb_rank?: number | null;
            /** Organic Rank */
            organic_rank?: number | null;
            /** Google Url */
            google_url?: string | null;
            /** Google Html File */
            google_html_file?: string | null;
            /** Search Volume */
            search_volume?: number | null;
            grid?: components["schemas"]["GridResponseSchema"] | null;
            /** Subdivision Organic Ranks */
            subdivision_organic_ranks?: {
                [key: string]: {
                    [key: string]: number | null;
                };
            };
        };
        /** RankingsResult */
        RankingsResult: {
            /** @description DMA rankings */
            dma?: components["schemas"]["RankingsWithMetadata"] | null;
            /** @description State rankings */
            state?: components["schemas"]["RankingsWithMetadata"] | null;
            /** @description City rankings */
            city?: components["schemas"]["RankingsWithMetadata"] | null;
            /**
             * Other Geo Targets
             * @description Other geo target rankings
             */
            other_geo_targets?: components["schemas"]["RankingsWithMetadata"][];
        };
        /** RankingsWithMetadata */
        RankingsWithMetadata: {
            geo_target: components["schemas"]["GeoTarget"];
            /** Keyword Rankings */
            keyword_rankings: {
                [key: string]: components["schemas"]["Rankings"];
            };
            current_estimates: components["schemas"]["Estimates"];
            potential_estimates: components["schemas"]["Estimates"];
            /** Avg Gmb Rank */
            avg_gmb_rank?: number | null;
            /** Avg Organic Rank */
            avg_organic_rank?: number | null;
        };
        /** ReadTimeField */
        ReadTimeField: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            kind: "read-time";
            /**
             * Suffix
             * @default
             */
            suffix: string;
        };
        /** ReportHeader */
        ReportHeader: {
            /**
             * Report Datetime
             * Format: date-time
             */
            report_datetime: string;
            review_summary: components["schemas"]["ReviewSummary"];
            /**
             * Review Improvement
             * @default -
             */
            review_improvement: string;
            /** Traffic Daily */
            traffic_daily: number[];
            /**
             * Traffic Improvement
             * @default -
             */
            traffic_improvement: string;
            /**
             * Leads This Month Google
             * @default 0
             */
            leads_this_month_google: number;
            /**
             * Leads This Month Organic
             * @default 0
             */
            leads_this_month_organic: number;
            /**
             * Leads This Month
             * @default 0
             */
            leads_this_month: number;
            /**
             * Leads Prev Month
             * @default 0
             */
            leads_prev_month: number;
            /**
             * Leads Improvement
             * @default -
             */
            leads_improvement: string;
            /**
             * Leads Prev Month Improvement
             * @default -
             */
            leads_prev_month_improvement: string;
            /** Articles Published */
            articles_published: number;
            /**
             * Articles Published Improvement
             * @default -
             */
            articles_published_improvement: string;
            /**
             * Articles Published Total
             * @default 0
             */
            articles_published_total: number;
            /** Avg Organic Ranking */
            avg_organic_ranking: number | null;
            /** Avg Gmb Ranking */
            avg_gmb_ranking: number | null;
            /** Competition Summary */
            competition_summary: components["schemas"]["TopCompetitionSummary"][];
            customer_vs_competition_summary: components["schemas"]["CustomerVsCompetitionSummary"];
        };
        /** ReportSummary */
        ReportSummary: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Report Type */
            report_type: string;
            /** Client Token */
            client_token: string;
            /** Public Url */
            public_url: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ReviewScheduleCreate */
        ReviewScheduleCreate: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /** Interval */
            interval: number;
            /**
             * Active
             * @default true
             */
            active: boolean;
        };
        /** ReviewScheduleRead */
        ReviewScheduleRead: {
            /**
             * Audited Entity Id
             * Format: uuid
             */
            audited_entity_id: string;
            /**
             * Run Interval
             * Format: duration
             */
            run_interval: string;
            /** Schedule Active */
            schedule_active: boolean;
            /**
             * Created
             * Format: date-time
             */
            created: string;
        };
        /** ReviewSummary */
        ReviewSummary: {
            /** Avg Score */
            avg_score: number | null;
            /** Num Scores */
            num_scores: number;
        };
        /** SearchVolumeRequest */
        SearchVolumeRequest: {
            /** Keywords */
            keywords: string[];
            /** Location Name */
            location_name: string;
        };
        /** SearchVolumesOfGeoTargets */
        SearchVolumesOfGeoTargets: {
            dma?: components["schemas"]["GeoTargetSearchVolumes"] | null;
            state?: components["schemas"]["GeoTargetSearchVolumes"] | null;
            city?: components["schemas"]["GeoTargetSearchVolumes"] | null;
            /** Other Geo Targets */
            other_geo_targets?: components["schemas"]["GeoTargetSearchVolumes"][] | null;
        };
        /** SubtitleField */
        SubtitleField: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            kind: "subtitle";
            /** Max Length */
            max_length?: number | null;
        };
        /** TaskDashboard */
        TaskDashboard: {
            /** Tasks */
            tasks: components["schemas"]["TaskInfo"][];
        };
        /** TaskInfo */
        TaskInfo: {
            /** Name */
            name: string;
            /** Description */
            description: string;
            /** Is Running */
            is_running: boolean;
            /** Method */
            method: string;
            /** Endpoint */
            endpoint: string;
            /** Current Task Started At */
            current_task_started_at?: string | null;
            /** Last Completed At */
            last_completed_at?: string | null;
            /** Last Status */
            last_status?: string | null;
            /** Last Error */
            last_error?: string | null;
            /** Can Trigger */
            can_trigger: boolean;
            /** Subtasks */
            subtasks?: components["schemas"]["TaskInfo"][];
        };
        /** TaskPayload */
        TaskPayload: {
            /** Message */
            message: string;
        };
        /** TitleField */
        TitleField: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            kind: "title";
        };
        /** TopCompetitionSummary */
        TopCompetitionSummary: {
            /** Competitor Id */
            competitor_id?: string | null;
            /** Domain */
            domain: string;
            /** Address */
            address?: string | null;
            /** Gmb Rank */
            gmb_rank: number | null;
            /** Gmb Rank Distribution */
            gmb_rank_distribution?: {
                [key: string]: number;
            };
            /** Leads */
            leads: number | null;
        };
        /** TrafficData */
        TrafficData: {
            /** Aggregate */
            aggregate?: Record<string, never> | null;
            /** Top Pages */
            top_pages?: Record<string, never>[] | null;
        };
        /**
         * UniformGridPoints
         * @description Grid points sharing the same radius.
         */
        UniformGridPoints: {
            /** Points */
            points: components["schemas"]["LatLon"][];
            /** Radius */
            radius: number;
        };
        /** UserCreate */
        UserCreate: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean | null;
            /**
             * Is Superuser
             * @default false
             */
            is_superuser: boolean | null;
            /**
             * Is Verified
             * @default false
             */
            is_verified: boolean | null;
            /** Name */
            name: string;
        };
        /** UserRead */
        UserRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Is Active
             * @default true
             */
            is_active: boolean;
            /**
             * Is Superuser
             * @default false
             */
            is_superuser: boolean;
            /**
             * Is Verified
             * @default false
             */
            is_verified: boolean;
            /** Name */
            name: string;
            /** Orgs */
            orgs: components["schemas"]["OrgRead"][];
            /** Password Reset Required */
            password_reset_required: boolean;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** WebflowFieldsConfig */
        WebflowFieldsConfig: {
            /** Determined Fields */
            determined_fields: {
                [key: string]: components["schemas"]["FeaturedImageField"] | components["schemas"]["ReadTimeField"] | components["schemas"]["TitleField"] | components["schemas"]["SubtitleField"] | components["schemas"]["ArticleTextField"] | components["schemas"]["ConstantField"];
            };
            /** Undetermined Fields */
            undetermined_fields: {
                [key: string]: Record<string, never>;
            };
        };
        /** WebflowIntegrationCreate */
        WebflowIntegrationCreate: {
            /** Webflow Collection Id */
            webflow_collection_id: string;
            /** Webflow Token */
            webflow_token: string;
        };
        /** WebflowIntegrationRead */
        WebflowIntegrationRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Website Id
             * Format: uuid
             */
            website_id: string;
            /** Webflow Collection Id */
            webflow_collection_id: string;
            /** Webflow Token */
            webflow_token: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at: string | null;
        };
        /** WebsiteBannerResponse */
        WebsiteBannerResponse: {
            /** Banner Url */
            banner_url: string;
            /** Warning */
            warning: string | null;
        };
        /**
         * WebsiteConstants
         * @description Constants needed for website configuration.
         *
         *     `banner_templates` map template name to template ID.
         *
         *     `article_fields_schema` is the OpenAPI JSON schema of the "article_fields" property of the WebsiteCreate model.
         */
        WebsiteConstants: {
            /** Banner Templates */
            banner_templates: {
                [key: string]: string;
            };
            /** Article Fields Schema */
            article_fields_schema: Record<string, never>;
        };
        /** WebsiteCreate */
        WebsiteCreate: {
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /**
             * Auto Generate Images
             * @default false
             */
            auto_generate_images: boolean;
            /**
             * Auto Publish
             * @default true
             */
            auto_publish: boolean;
            /** Articles Per Week */
            articles_per_week: number;
            /** Blog Hub Path */
            blog_hub_path: string;
            /** Article Fields */
            article_fields: {
                [key: string]: components["schemas"]["FeaturedImageField"] | components["schemas"]["ReadTimeField"] | components["schemas"]["TitleField"] | components["schemas"]["SubtitleField"] | components["schemas"]["ArticleTextField"] | components["schemas"]["ConstantField"];
            };
        };
        /** WebsiteRead */
        WebsiteRead: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Org Id
             * Format: uuid
             */
            org_id: string;
            /** Auto Generate Images */
            auto_generate_images: boolean;
            /**
             * Auto Publish
             * @default true
             */
            auto_publish: boolean;
            /** Articles Per Week */
            articles_per_week: number;
            /** Blog Hub Path */
            blog_hub_path: string;
            /** Article Fields */
            article_fields: {
                [key: string]: components["schemas"]["FeaturedImageField"] | components["schemas"]["ReadTimeField"] | components["schemas"]["TitleField"] | components["schemas"]["SubtitleField"] | components["schemas"]["ArticleTextField"] | components["schemas"]["ConstantField"];
            };
            /** Processing Error */
            processing_error?: string | null;
            /** Last Report At */
            last_report_at?: string | null;
            /** Upload Test Passed At */
            upload_test_passed_at?: string | null;
            /** Org Domain */
            org_domain: string;
            /** Org Active */
            org_active: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /** Updated At */
            updated_at: string | null;
        };
        /** DomainRequest */
        app__api__v1__mcp__schemas__DomainRequest: {
            /** Domain */
            domain: string;
        };
        /** DomainRequest */
        app__core__worker__client_monthly_report__DomainRequest: {
            /** Domain */
            domain: string;
            level: components["schemas"]["Level"];
        };
        /** ReviewSchema */
        app__schemas__location__ReviewSchema: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Profile Name */
            profile_name: string;
            /** Profile Image Url */
            profile_image_url: string;
            /** Review Url */
            review_url: string;
            /** Review Value */
            review_value: number;
            /** Review Text */
            review_text: string | null;
            /**
             * Review Date
             * Format: date-time
             */
            review_date: string;
            /** Is Live */
            is_live: boolean;
        };
        /** ReviewSchema */
        app__schemas__review__ReviewSchema: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /**
             * Gmb Id
             * Format: uuid
             */
            gmb_id: string;
            /**
             * Is Live
             * @default true
             */
            is_live: boolean;
            /** Profile Name */
            profile_name: string;
            /** Profile Image Url */
            profile_image_url: string;
            /** Review Url */
            review_url: string;
            /** Review Value */
            review_value: number;
            /** Review Text */
            review_text?: string | null;
            /**
             * Review Date
             * Format: date-time
             */
            review_date: string;
            /** Review Id */
            review_id: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_orgs_without_completed_tasks_api_v1_failed_tasks_org_domains_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    kick_off_all_org_client_monthly_report_generation_api_v1_reports_client_monthly_run_all_post: {
        parameters: {
            query?: {
                reuse_recent_reports_hours?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["app__core__worker__client_monthly_report__DomainRequest"][] | null;
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_report_api_v1_reports__report_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                report_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_articles_with_spelling_errors_api_v1_articles_spelling_errors_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_articles_for_org_api_v1_articles__org_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    page_analysis_for_org_api_v1_articles__org_id__page_analysis_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    kick_off_for_org_api_v1_articles__org_id__kick_off_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    kick_off_api_v1_articles_kick_off_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    check_articles_for_domain_api_v1_articles_domain__domain__last_30_days_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                domain: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_grid_schedules_api_v1_grid_schedules_html_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/html": string;
                };
            };
        };
    };
    post_grid_schedule_api_v1_grid_schedule_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GridSchemaMultipleSearchTerms"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    kick_off_all_grid_schedules_api_v1_grid_schedules_run_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    process_grid_schedule_batch_handler_api_v1_grid_schedule__grid_schedule_id__run_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                grid_schedule_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_grid_schedules_for_org_api_v1_grid_schedule_org__org_id__run_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_competitor_ranks_api_v1_competitor_grid_ranks__grid_ranks_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                grid_ranks_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompetitorRanks"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_task_dashboard_api_v1_tasks_dashboard_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TaskDashboard"];
                };
            };
        };
    };
    create_task_api_v1_tasks_task_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TaskPayload"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Job"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_users_api_v1_users_get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_current_user_api_v1_users_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EnhancedUserRead"];
                };
            };
        };
    };
    get_location_api_v1_locations__location_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                location_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recent_grids_for_location_api_v1_locations__location_id__grids_get: {
        parameters: {
            query?: {
                keyword?: string | null;
            };
            header?: never;
            path: {
                location_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GridResponseSchema"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_org_api_v1_orgs__post: {
        parameters: {
            query?: {
                join?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrgCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrgRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_org_api_v1_orgs__org_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrgRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_lead_forms_api_v1_orgs__org_id__lead_forms_get: {
        parameters: {
            query?: {
                until?: string | null;
                report_id?: string | null;
                client_token?: string | null;
            };
            header?: never;
            path: {
                org_id: string | null;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_lead_forms_chart_api_v1_orgs__org_id__lead_forms_chart_get: {
        parameters: {
            query?: {
                client_token?: string | null;
                report_id?: string | null;
            };
            header?: never;
            path: {
                org_id: string | null;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: Record<string, never> | Record<string, never>[];
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_paginated_lead_forms_api_v1_orgs__org_id__paginated_lead_forms_get: {
        parameters: {
            query?: {
                page_no?: number;
                per_page?: number;
                client_token?: string | null;
                report_id?: string | null;
            };
            header?: never;
            path: {
                org_id: string | null;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedLeadForms"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_locations_api_v1_orgs__org_id__locations_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationsResponseSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_org_backlinks_api_v1_orgs__org_id__backlinks_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_organization_insights_api_v1_admin_insights__domain__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The domain name of the organization to get insights for
                 * @example example.com
                 */
                domain: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationInsights"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_user_accounts_api_v1_admin_generate_user_accounts_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_admin_stats_handler_api_v1_admin_stats_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    bulk_load_api_v1_admin_orgs_bulk_load_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    job_listings_api_v1_admin_job_listings_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    purge_org_data_handler_api_v1_admin_purge_org_data__domain__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                domain: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    tweak_locations_handler_api_v1_admin_tweak_locations_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    job_search_handler_api_v1_admin_job_search_get: {
        parameters: {
            query: {
                date_posted: components["schemas"]["DatePosted"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_locations_without_gmb_api_v1_admin_locations_without_gmb_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationSchemaWithOrg"][];
                };
            };
        };
    };
    get_locations_with_bad_reviews_api_v1_admin_locations_bad_reviews_get: {
        parameters: {
            query?: {
                threshold?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationSchemaWithOrg"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_locations_with_incomplete_gmb_api_v1_admin_locations_incomplete_gmb_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationSchemaWithOrg"][];
                };
            };
        };
    };
    get_locations_without_reviews_api_v1_admin_locations_without_reviews_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationSchemaWithOrg"][];
                };
            };
        };
    };
    get_system_overview_api_v1_admin_system_overview_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_available_industries_api_v1_audit_available_industries_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IndustriesResponse"];
                };
            };
        };
    };
    list_audits_api_v1_audit_list_get: {
        parameters: {
            query?: {
                active_orgs_only?: boolean;
                date_from?: string | null;
                date_to?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuditListing"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_audit_api_v1_audit__report_id__get: {
        parameters: {
            query?: {
                client_token?: string | null;
            };
            header?: never;
            path: {
                report_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuditReport"] | components["schemas"]["MonthlyReport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_audit_v2_api_v1_audit__domain__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                domain: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuditKeywordsAndLocationsRequired"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuditReport"] | components["schemas"]["MonthlyReport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_audit_keywords_and_locations_api_v1_audit__domain__keywords_and_locations_get: {
        parameters: {
            query?: {
                /** @description Filter results by category */
                category?: string | null;
                /** @description Whether to load locations or not */
                loadLocations?: boolean | null;
            };
            header?: never;
            path: {
                domain: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuditKeywordsAndLocations"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_reviews_schedules_api_v1_reviews_schedule_run_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    create_review_schedule_or_org_api_v1_reviews_schedule_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReviewScheduleCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReviewScheduleRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_reviews_api_v1_reviews__location_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                location_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["app__schemas__review__ReviewSchema"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_backlinks_schedules_api_v1_backlinks_schedule_run_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    create_backlink_schedule_or_org_api_v1_backlinks_schedule_create_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BacklinksScheduleCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BacklinksScheduleRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_backlinks_schedule_for_org_api_v1_backlinks_schedule__org_id__run_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_backlinks_api_v1_backlinks__org_id__backlinks_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BacklinkRead"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_domain_pages_api_v1_backlinks__org_id__domain_pages_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BacklinksDomainPageRead"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_referring_domains_api_v1_backlinks__org_id__referring_domains_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BacklinksReferringDomainRead"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_backlinks_timeseries_summary_api_v1_backlinks__org_id__backlinks_summary_timeseries_get: {
        parameters: {
            query: {
                start_date: string;
                end_date: string;
            };
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BacklinksTimeseriesSummaryRead"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_backlinks_aggregated_timeseries_summary_api_v1_backlinks__org_id__backlinks_aggregated_summary_timeseries_get: {
        parameters: {
            query: {
                start_date: string;
                end_date: string;
            };
            header?: never;
            path: {
                org_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BacklinksAggregatedSummaryRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_websites_api_v1_content_gen_website_get: {
        parameters: {
            query?: {
                org_id?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebsiteRead"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_website_api_v1_content_gen_website_post: {
        parameters: {
            query?: {
                sync_style?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["WebsiteCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebsiteRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_website_constants_api_v1_content_gen_website_constants_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebsiteConstants"];
                };
            };
        };
    };
    get_website_api_v1_content_gen_website__website_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebsiteRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_website_api_v1_content_gen_website__website_id__put: {
        parameters: {
            query?: {
                sync_style?: boolean;
            };
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["WebsiteCreate"] | null;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebsiteRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_website_api_v1_content_gen_website__website_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_website_webflow_integration_api_v1_content_gen_website__website_id__webflow_integration_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebflowIntegrationRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_website_webflow_integration_api_v1_content_gen_website__website_id__webflow_integration_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["WebflowIntegrationCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebflowIntegrationRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_website_webflow_integration_api_v1_content_gen_website__website_id__webflow_integration_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    determine_webflow_fields_api_v1_content_gen_website__website_id__webflow_fields_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebflowFieldsConfig"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_articles_api_v1_content_gen_website__website_id__article_get: {
        parameters: {
            query?: {
                status?: components["schemas"]["GeneratedArticleStatus"] | null;
                has_error?: boolean | null;
                date_from?: string | null;
                date_to?: string | null;
                after?: string | null;
                per_page?: number;
            };
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArticlePage"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_article_api_v1_content_gen_website__website_id__article_post: {
        parameters: {
            query?: {
                generate_now?: boolean;
            };
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ArticleCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArticleRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    article_upload_test_api_v1_content_gen_website__website_id__article_upload_test_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    create_articles_api_v1_content_gen_website__website_id__article_bulk_post: {
        parameters: {
            query?: {
                generate_now?: boolean;
                upsert?: boolean;
            };
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ArticleCreate"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArticleRead"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_article_api_v1_content_gen_website__website_id__article__article_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                article_id: string;
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArticleRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_article_api_v1_content_gen_website__website_id__article__article_id__put: {
        parameters: {
            query?: {
                trigger_action?: "clear" | "generate_and_publish" | "publish_only" | null;
            };
            header?: never;
            path: {
                article_id: string;
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ArticleCreate"] | null;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArticleRead"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    delete_article_api_v1_content_gen_website__website_id__article__article_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                article_id: string;
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_article_text_api_v1_content_gen_website__website_id__article__article_id__text_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                article_id: string;
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_article_html_api_v1_content_gen_website__website_id__article__article_id__html_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                article_id: string;
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/html": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_website_palette_api_v1_content_gen_website__website_id__palette_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaletteRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_website_palette_api_v1_content_gen_website__website_id__palette_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PaletteCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaletteRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_website_palette_api_v1_content_gen_website__website_id__palette_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_website_logo_api_v1_content_gen_website__website_id__logo_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_website_logo_api_v1_content_gen_website__website_id__logo_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_set_website_logo_api_v1_content_gen_website__website_id__logo_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_website_logo_api_v1_content_gen_website__website_id__logo_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_website_banner_api_v1_content_gen_website__website_id__banner_post: {
        parameters: {
            query: {
                banner_text: string;
            };
            header?: never;
            path: {
                website_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebsiteBannerResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    report_api_v1_content_gen_report_get: {
        parameters: {
            query?: {
                date_from?: string | null;
                date_to?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArticleReportRow"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_org_membership_api_v1_org_memberships_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrgMembershipCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrgMembershipRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_org_membership_api_v1_org_memberships__membership_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                membership_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrgMembershipRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    extract_data_api_v1_extract_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ExtractRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_current_credits_api_v1_mcp_current_credits_get: {
        parameters: {
            query?: never;
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocaiUserAvailableCredits"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    find_locations_api_v1_mcp_find_locations_post: {
        parameters: {
            query?: never;
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocationRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    find_locations_cost_api_v1_mcp_find_locations_cost_post: {
        parameters: {
            query?: never;
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocationRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreditCost"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_audits_for_domain_api_v1_mcp_audit_get: {
        parameters: {
            query?: {
                limit?: number;
                domain?: string | null;
            };
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuditsListing"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    start_audit_for_domain_api_v1_mcp_audit_post: {
        parameters: {
            query?: {
                report_reuse_window_h?: number;
            };
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DomainAuditRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DomainAuditResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Failed Dependency */
            424: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    get_audit_for_domain_cost_api_v1_mcp_audit_cost_post: {
        parameters: {
            query?: never;
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DomainAuditRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreditCost"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_domain_industry_api_v1_mcp_get_domain_industry_post: {
        parameters: {
            query?: never;
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["app__api__v1__mcp__schemas__DomainRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Failed Dependency */
            424: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    get_domain_industry_cost_api_v1_mcp_get_domain_industry_cost_post: {
        parameters: {
            query?: never;
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["app__api__v1__mcp__schemas__DomainRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreditCost"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Failed Dependency */
            424: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    search_volume_of_keywords_api_v1_mcp_search_volume_of_keywords_post: {
        parameters: {
            query?: never;
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SearchVolumeRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: number;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_volume_of_keywords_cost_api_v1_mcp_search_volume_of_keywords_cost_post: {
        parameters: {
            query?: never;
            header?: {
                "locai-user-api-key"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SearchVolumeRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreditCost"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_user_api_v1_locai_user_post: {
        parameters: {
            query?: never;
            header?: {
                authorization?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LocaiUserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocaiUserRead"];
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    get_user_api_v1_locai_user__email__get: {
        parameters: {
            query?: never;
            header?: {
                authorization?: string[] | null;
            };
            path: {
                email: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocaiUserRead"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    stripe_webhook_api_v1_locai_payment_stripe_webhook_post: {
        parameters: {
            query?: never;
            header?: {
                "stripe-signature"?: string[] | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    auth_jwt_login_auth_jwt_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_auth_jwt_login_auth_jwt_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI",
                     *       "token_type": "bearer"
                     *     } */
                    "application/json": components["schemas"]["BearerResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    auth_jwt_logout_auth_jwt_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Missing token or inactive user. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    register_register_auth_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    reset_forgot_password_auth_forgot_password_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_reset_forgot_password_auth_forgot_password_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    reset_reset_password_auth_reset_password_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_reset_reset_password_auth_reset_password_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    verify_request_token_auth_request_verify_token_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_verify_request_token_auth_request_verify_token_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    verify_verify_auth_verify_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_verify_verify_auth_verify_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    authenticated_route_authenticated_route_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    read_root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
